var CronJob = require('cron').CronJob;
const fetch = require("node-fetch");
var job = new CronJob('*/10 * * * * *', function() {

    var fs = require('fs');
    var Promise = require('bluebird');
    var readFile = Promise.promisify(fs.readFile);
    var writeFile = Promise.promisify(fs.writeFile);
    

    var promiseArray = [readFile('Conduit Inventory.txt'), 
                        readFile('Conduit statistics.txt'),
                        readFile('Flow routing continuity.txt'),
                        readFile('Inflows.txt'),
                        readFile('Model complexity.txt'),
                        readFile('Model inventory.txt'),
                        readFile('Node statistics.txt'),
                        readFile('Options.txt'),
                        readFile('Pipe inventory.txt'),
                        readFile('Results statistics.txt'),
                        readFile('Runoff quantity continuity.txt'),
                        readFile('Subcatchment statistics.txt'),
                        readFile('Unused objects.txt')
                    ];

    Promise.all(promiseArray).then((dataArray)=>{
        var data = '';
        const obj ={};
        for(var i=0;i<dataArray.length;i++){
            data += dataArray[i];
            //dataArray ไม่ใช่ row แต่เป็นไฟล์
            let allfile = ""+dataArray[i];
            //eval(dataArray[i]);
            //console.log(eval(dataArray[i]));
            
            //let column = allfile.split("\t");
            let breakfile = allfile.split("\r\n");
            for(item of breakfile){
                let line = item.split("\t");
                if(line.length>=2){
                    let key = ""+line[0];
                    let value = ""+line[1];
                    obj[key] = value;
                }
                //console.log(line);
            }
            //let file = breakfile.toString().split(",");
            //console.log(breakfile);
        }
        //console.log(obj);
        const rawResponse = fetch('http://localhost/weather/public/api/weatherapi', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                detail: obj
            })
        });
        //const answer = rawResponse.json();

        console.log(obj);
        //console.log(typeof(data));

        //-------------------------fetch file-----------------------
        const formData = new FormData();
        //const photos = document.querySelector('[png],[kmz]');

        formData.append('kmls', 'file/2D_Base Animation.kmz');
        /*for (let i = 0; i < photos.files.length; i++) {
            formData.append('photos', photos.files[i]);
        }*/

        fetch('http://localhost/weather/public/api/weatherapi', {
            method: 'POST',
            body: formData,
        })
        .then((response) => response.json())
        .then((result) => {
            console.log('Success:', result);
        })
        .catch((error) => {
            console.error('Error:', error);
        });

        //-------------------------scraping html---------------------
        let cheerio = require('cheerio');
        let $ = cheerio.load('our html page url here');

        var companiesList = [];

        // For each .item, we add all the structure of a company to the companiesList array
        // Don't try to understand what follows because we will do it differently.
        $('.list.items .item').each(function(index, element){
	        companiesList[index] = {};
	        var header = $(element).find('.header');
	        companiesList[index]['name'] = $(header).find('[itemprop=name]').text();
	        //companiesList[index]['description'] = $(header).find('[rel=description]').text();
	        //companiesList[index]['url'] = $(header).find('.header [itemprop=name] a').getAttribute('href');
	        var contact = $(element).find('.contact');
	        companiesList[index]['contact'] = {};
	        companiesList[index]['contact']['telephone'] = $(contact).find('[itemprop=telephone]').text();
	        //companiesList[index]['contact']['employee'] = {};
	        //companiesList[index]['contact']['employee']['name'] = $(contact).find('[itemprop=employeeName]').text();
	        //companiesList[index]['contact']['employee']['jobTitle'] = $(contact).find('[itemprop=employeeJobTitle]').text();
	        //companiesList[index]['contact']['employee']['email'] = $(contact).find('[itemprop=email]').text();
        });

        console.log(companiesList); // Output the data in the terminal

    });
    
    /*Promise.all(promiseArray).then((dataArray)=>{
        var data = '';
        for(var i=0;i<dataArray.length;i++){
            data += dataArray[i];
            //dataArray ไม่ใช่ row แต่เป็นไฟล์
            let allfile = ""+dataArray[i];
            //eval(dataArray[i]);
            //console.log(eval(dataArray[i]));
            let column = allfile.split("\t");
            let breakfile = column.toString().split("\r\n");
            let file = breakfile.toString().split(",");
            console.log(file);
        }
    //console.log(typeof(data));
    });*/

}, null, true, 'America/Los_Angeles');
job.start();